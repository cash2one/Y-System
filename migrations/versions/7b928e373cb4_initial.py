"""initial

Revision ID: 7b928e373cb4
Revises: 
Create Date: 2017-03-11 01:31:00.199647

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7b928e373cb4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('announcement_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_announcement_types_name'), 'announcement_types', ['name'], unique=True)
    op.create_table('assignment_score_grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assignment_score_grades_name'), 'assignment_score_grades', ['name'], unique=True)
    op.create_table('booking_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_booking_states_name'), 'booking_states', ['name'], unique=True)
    op.create_table('colors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('css_class', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_colors_name'), 'colors', ['name'], unique=True)
    op.create_table('course_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_course_types_name'), 'course_types', ['name'], unique=True)
    op.create_table('education_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_education_types_name'), 'education_types', ['name'], unique=True)
    op.create_table('genders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genders_name'), 'genders', ['name'], unique=True)
    op.create_table('gre_aw_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gre_aw_scores_name'), 'gre_aw_scores', ['name'], unique=True)
    op.create_table('gre_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gre_tests_date'), 'gre_tests', ['date'], unique=True)
    op.create_table('id_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_id_types_name'), 'id_types', ['name'], unique=True)
    op.create_table('invitation_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invitation_types_name'), 'invitation_types', ['name'], unique=True)
    op.create_table('ipad_capacities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ipad_capacities_name'), 'ipad_capacities', ['name'], unique=True)
    op.create_table('ipad_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ipad_states_name'), 'ipad_states', ['name'], unique=True)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('check_overdue', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.create_table('purpose_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_purpose_types_name'), 'purpose_types', ['name'], unique=True)
    op.create_table('referrer_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_referrer_types_name'), 'referrer_types', ['name'], unique=True)
    op.create_table('relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_relationships_name'), 'relationships', ['name'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rooms_name'), 'rooms', ['name'], unique=True)
    op.create_table('score_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_score_types_name'), 'score_types', ['name'], unique=True)
    op.create_table('toefl_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_toefl_tests_date'), 'toefl_tests', ['date'], unique=True)
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('hour', sa.Interval(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('include_video', sa.Boolean(), nullable=True),
    sa.Column('advanced', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['course_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lessons_name'), 'lessons', ['name'], unique=True)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('color_id', sa.Integer(), nullable=True),
    sa.Column('pinned', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['color_id'], ['colors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.Unicode(length=64), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('activated', sa.Boolean(), nullable=True),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('id_type_id', sa.Integer(), nullable=True),
    sa.Column('id_number', sa.Unicode(length=64), nullable=True),
    sa.Column('gender_id', sa.Integer(), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('mobile', sa.Unicode(length=64), nullable=True),
    sa.Column('wechat', sa.Unicode(length=64), nullable=True),
    sa.Column('qq', sa.Unicode(length=64), nullable=True),
    sa.Column('address', sa.Unicode(length=128), nullable=True),
    sa.Column('emergency_contact_name', sa.Unicode(length=64), nullable=True),
    sa.Column('emergency_contact_mobile', sa.Unicode(length=64), nullable=True),
    sa.Column('emergency_contact_relationship_id', sa.Integer(), nullable=True),
    sa.Column('worked_in_same_field', sa.Boolean(), nullable=True),
    sa.Column('deformity', sa.Boolean(), nullable=True),
    sa.Column('application_aim', sa.Unicode(length=128), nullable=True),
    sa.Column('application_agency', sa.Unicode(length=128), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['emergency_contact_relationship_id'], ['relationships.id'], ),
    sa.ForeignKeyConstraint(['gender_id'], ['genders.id'], ),
    sa.ForeignKeyConstraint(['id_type_id'], ['id_types.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id_number'), 'users', ['id_number'], unique=False)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_table('announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Unicode(length=64), nullable=True),
    sa.Column('body', sa.UnicodeText(), nullable=True),
    sa.Column('body_html', sa.UnicodeText(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('show', sa.Boolean(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['announcement_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assignments_name'), 'assignments', ['name'], unique=True)
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('show', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['course_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_courses_name'), 'courses', ['name'], unique=False)
    op.create_table('education_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('school', sa.Unicode(length=64), nullable=True),
    sa.Column('major', sa.Unicode(length=64), nullable=True),
    sa.Column('gpa', sa.Float(), nullable=True),
    sa.Column('full_gpa', sa.Float(), nullable=True),
    sa.Column('year', sa.Unicode(length=16), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['education_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employment_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('employer', sa.Unicode(length=64), nullable=True),
    sa.Column('position', sa.Unicode(length=64), nullable=True),
    sa.Column('year', sa.Unicode(length=16), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feeds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('event', sa.UnicodeText(), nullable=True),
    sa.Column('category', sa.Unicode(length=64), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feeds_category'), 'feeds', ['category'], unique=False)
    op.create_table('gre_test_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('v_score', sa.Integer(), nullable=True),
    sa.Column('q_score', sa.Integer(), nullable=True),
    sa.Column('aw_score_id', sa.Integer(), nullable=True),
    sa.Column('remark', sa.Unicode(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['aw_score_id'], ['gre_aw_scores.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['gre_tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_registrations',
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('organizer_id', 'member_id')
    )
    op.create_table('invitations',
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('paid_off', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['invitation_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('inviter_id', 'user_id')
    )
    op.create_table('ipads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('serial', sa.Unicode(length=64), nullable=True),
    sa.Column('alias', sa.Unicode(length=64), nullable=True),
    sa.Column('capacity_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('video_playback', sa.Interval(), nullable=True),
    sa.Column('battery_life', sa.Integer(), nullable=True),
    sa.Column('charged_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['capacity_id'], ['ipad_capacities.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['ipad_states.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ipads_alias'), 'ipads', ['alias'], unique=False)
    op.create_index(op.f('ix_ipads_serial'), 'ipads', ['serial'], unique=False)
    op.create_table('notate_bene',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.UnicodeText(), nullable=True),
    sa.Column('body_html', sa.UnicodeText(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('show', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['course_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('available', sa.Boolean(), nullable=True),
    sa.Column('pinned', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_table('purposes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('remark', sa.UnicodeText(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['purpose_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'type_id')
    )
    op.create_table('receptions',
    sa.Column('receptionist_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receptionist_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('receptionist_id', 'user_id')
    )
    op.create_table('referrers',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('remark', sa.UnicodeText(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['referrer_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'type_id')
    )
    op.create_table('score_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('full_score', sa.Integer(), nullable=True),
    sa.Column('remark', sa.UnicodeText(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['score_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sections_name'), 'sections', ['name'], unique=True)
    op.create_table('study_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('remark', sa.UnicodeText(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suspension_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('original_role_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('current', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['original_role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tests_name'), 'tests', ['name'], unique=True)
    op.create_table('toefl_test_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('total_score', sa.Integer(), nullable=True),
    sa.Column('reading_score', sa.Integer(), nullable=True),
    sa.Column('listening_score', sa.Integer(), nullable=True),
    sa.Column('speaking_score', sa.Integer(), nullable=True),
    sa.Column('writing_score', sa.Integer(), nullable=True),
    sa.Column('remark', sa.Unicode(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['toefl_tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_creations',
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('creator_id', 'user_id')
    )
    op.create_table('user_supervisions',
    sa.Column('supervisor_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['supervisor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('supervisor_id', 'user_id')
    )
    op.create_table('user_tags',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'tag_id')
    )
    op.create_table('assignment_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.Column('grade_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ),
    sa.ForeignKeyConstraint(['grade_id'], ['assignment_score_grades.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_registrations',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'course_id')
    )
    op.create_table('feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('study_plan_id', sa.Integer(), nullable=True),
    sa.Column('body', sa.UnicodeText(), nullable=True),
    sa.Column('body_html', sa.UnicodeText(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['study_plan_id'], ['study_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ipad_contents',
    sa.Column('ipad_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ipad_id'], ['ipads.id'], ),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('ipad_id', 'lesson_id')
    )
    op.create_index(op.f('ix_ipad_contents_ipad_id'), 'ipad_contents', ['ipad_id'], unique=False)
    op.create_index(op.f('ix_ipad_contents_lesson_id'), 'ipad_contents', ['lesson_id'], unique=False)
    op.create_table('punches',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('milestone', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'section_id')
    )
    op.create_table('purchases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('period_id', sa.Integer(), nullable=True),
    sa.Column('quota', sa.Integer(), nullable=True),
    sa.Column('available', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_date'), 'schedules', ['date'], unique=False)
    op.create_table('study_plan_nota_bene',
    sa.Column('study_plan_id', sa.Integer(), nullable=False),
    sa.Column('nota_bene_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nota_bene_id'], ['notate_bene.id'], ),
    sa.ForeignKeyConstraint(['study_plan_id'], ['study_plans.id'], ),
    sa.PrimaryKeyConstraint('study_plan_id', 'nota_bene_id')
    )
    op.create_table('user_announcements',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('announcement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'announcement_id')
    )
    op.create_table('vb_test_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('retrieved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('y_gre_test_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('v_score', sa.Integer(), nullable=True),
    sa.Column('q_score', sa.Integer(), nullable=True),
    sa.Column('aw_score_id', sa.Integer(), nullable=True),
    sa.Column('retrieved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['aw_score_id'], ['gre_aw_scores.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookings',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('token', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['booking_states.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'schedule_id')
    )
    op.create_index(op.f('ix_bookings_token'), 'bookings', ['token'], unique=True)
    op.create_table('rentals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ipad_id', sa.Integer(), nullable=True),
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.Column('walk_in', sa.Boolean(), nullable=True),
    sa.Column('rent_time', sa.DateTime(), nullable=True),
    sa.Column('rent_agent_id', sa.Integer(), nullable=True),
    sa.Column('returned', sa.Boolean(), nullable=True),
    sa.Column('return_time', sa.DateTime(), nullable=True),
    sa.Column('return_agent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ipad_id'], ['ipads.id'], ),
    sa.ForeignKeyConstraint(['rent_agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['return_agent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rentals')
    op.drop_index(op.f('ix_bookings_token'), table_name='bookings')
    op.drop_table('bookings')
    op.drop_table('y_gre_test_scores')
    op.drop_table('vb_test_scores')
    op.drop_table('user_announcements')
    op.drop_table('study_plan_nota_bene')
    op.drop_index(op.f('ix_schedules_date'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_table('purchases')
    op.drop_table('punches')
    op.drop_index(op.f('ix_ipad_contents_lesson_id'), table_name='ipad_contents')
    op.drop_index(op.f('ix_ipad_contents_ipad_id'), table_name='ipad_contents')
    op.drop_table('ipad_contents')
    op.drop_table('feedbacks')
    op.drop_table('course_registrations')
    op.drop_table('assignment_scores')
    op.drop_table('user_tags')
    op.drop_table('user_supervisions')
    op.drop_table('user_creations')
    op.drop_table('toefl_test_score')
    op.drop_index(op.f('ix_tests_name'), table_name='tests')
    op.drop_table('tests')
    op.drop_table('suspension_records')
    op.drop_table('study_plans')
    op.drop_index(op.f('ix_sections_name'), table_name='sections')
    op.drop_table('sections')
    op.drop_table('score_records')
    op.drop_table('referrers')
    op.drop_table('receptions')
    op.drop_table('purposes')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_table('products')
    op.drop_table('periods')
    op.drop_table('notate_bene')
    op.drop_index(op.f('ix_ipads_serial'), table_name='ipads')
    op.drop_index(op.f('ix_ipads_alias'), table_name='ipads')
    op.drop_table('ipads')
    op.drop_table('invitations')
    op.drop_table('group_registrations')
    op.drop_table('gre_test_scores')
    op.drop_index(op.f('ix_feeds_category'), table_name='feeds')
    op.drop_table('feeds')
    op.drop_table('employment_records')
    op.drop_table('education_records')
    op.drop_index(op.f('ix_courses_name'), table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_assignments_name'), table_name='assignments')
    op.drop_table('assignments')
    op.drop_table('announcements')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_id_number'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_table('tags')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_lessons_name'), table_name='lessons')
    op.drop_table('lessons')
    op.drop_index(op.f('ix_toefl_tests_date'), table_name='toefl_tests')
    op.drop_table('toefl_tests')
    op.drop_index(op.f('ix_score_types_name'), table_name='score_types')
    op.drop_table('score_types')
    op.drop_index(op.f('ix_rooms_name'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_relationships_name'), table_name='relationships')
    op.drop_table('relationships')
    op.drop_index(op.f('ix_referrer_types_name'), table_name='referrer_types')
    op.drop_table('referrer_types')
    op.drop_index(op.f('ix_purpose_types_name'), table_name='purpose_types')
    op.drop_table('purpose_types')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_ipad_states_name'), table_name='ipad_states')
    op.drop_table('ipad_states')
    op.drop_index(op.f('ix_ipad_capacities_name'), table_name='ipad_capacities')
    op.drop_table('ipad_capacities')
    op.drop_index(op.f('ix_invitation_types_name'), table_name='invitation_types')
    op.drop_table('invitation_types')
    op.drop_index(op.f('ix_id_types_name'), table_name='id_types')
    op.drop_table('id_types')
    op.drop_index(op.f('ix_gre_tests_date'), table_name='gre_tests')
    op.drop_table('gre_tests')
    op.drop_index(op.f('ix_gre_aw_scores_name'), table_name='gre_aw_scores')
    op.drop_table('gre_aw_scores')
    op.drop_index(op.f('ix_genders_name'), table_name='genders')
    op.drop_table('genders')
    op.drop_index(op.f('ix_education_types_name'), table_name='education_types')
    op.drop_table('education_types')
    op.drop_index(op.f('ix_course_types_name'), table_name='course_types')
    op.drop_table('course_types')
    op.drop_index(op.f('ix_colors_name'), table_name='colors')
    op.drop_table('colors')
    op.drop_index(op.f('ix_booking_states_name'), table_name='booking_states')
    op.drop_table('booking_states')
    op.drop_index(op.f('ix_assignment_score_grades_name'), table_name='assignment_score_grades')
    op.drop_table('assignment_score_grades')
    op.drop_index(op.f('ix_announcement_types_name'), table_name='announcement_types')
    op.drop_table('announcement_types')
    # ### end Alembic commands ###
